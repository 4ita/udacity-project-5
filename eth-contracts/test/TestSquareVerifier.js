// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');

const proofJSON = require('../../zokrates/code/square/proof.json');
const proof = proofJSON.proof
const failureInput = ['0x9', '0x2'];

contract('TestVerifier', (accounts) => {
  describe('verify tx', function () {
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it('Test verification with correct proof', async () => {
      this.contract = await Verifier.new();
      const result = await this.contract.verifyTx.call(
        proof.A,
        proof.A_p,
        proof.B,
        proof.B_p,
        proof.C,
        proof.C_p,
        proof.H,
        proof.K,
        proofJSON.input
      );
      assert.equal(result, true, 'correct proof');
    });

    // Test verification with incorrect proof
    it('Test verification with incorrect proof', async () => {
      this.contract = await Verifier.new();
      const result = await this.contract.verifyTx.call(
        proof.A,
        proof.A_p,
        proof.B,
        proof.B_p,
        proof.C,
        proof.C_p,
        proof.H,
        proof.K,
        failureInput
      );
      assert.equal(result, false, 'incorrect proof');
    });
  });
});
